import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Diana Paola
 */
public class ViewCliente extends javax.swing.JFrame {
    private Cliente cliente = new Cliente();
    private File[] archivos = new File[0];
    private ArrayList<String> subRutas = new ArrayList();
    /**
     * Creates new form ViewCliente
     */
    public ViewCliente() {
        initComponents();
    }
    
    public void mostrarArchivos(File[] f1,String tabulacion){
        
        for(File f: f1){
            if(f.isDirectory()){
                this.jTextAreaFilesSelected.append(tabulacion+f.getName()+"\\ \n");
                mostrarArchivos(f.listFiles(),tabulacion+"  ");
            }else{
                this.jTextAreaFilesSelected.append(tabulacion+f.getName()+"\n");
            }
        }
    }
    
    public void showFilesInServer() throws IOException{
        ArrayList <String> listFilesInServer = new ArrayList();
        listFilesInServer = cliente.getServerArchivos();
        
        DefaultListModel listModel = new DefaultListModel();
        for (int i = 0; i < listFilesInServer.size(); i++) {
            listModel.addElement(listFilesInServer.get(i));
        }
        jListFilesInServer.setModel(listModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButtonSelectFiles = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaFilesSelected = new javax.swing.JTextArea();
        jButtonSelectFilesServer = new javax.swing.JButton();
        jButtonSendFiles = new javax.swing.JButton();
        jButtonDeleteFiles = new javax.swing.JButton();
        jButtonCreateDirectory = new javax.swing.JButton();
        jButtonDownloadFiles = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListFilesInServer = new javax.swing.JList<>();
        jButtonOpenDirectory = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Drive simulator ");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel2.setText("Drive simulator");

        jButtonSelectFiles.setText("Seleccionar archivos...");
        jButtonSelectFiles.setToolTipText("");
        jButtonSelectFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectFilesActionPerformed(evt);
            }
        });

        jTextAreaFilesSelected.setColumns(20);
        jTextAreaFilesSelected.setRows(5);
        jScrollPane1.setViewportView(jTextAreaFilesSelected);

        jButtonSelectFilesServer.setText("Seleccionar o ver archivos del servidor");
        jButtonSelectFilesServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectFilesServerActionPerformed(evt);
            }
        });

        jButtonSendFiles.setText("Subir archivos");
        jButtonSendFiles.setToolTipText("");
        jButtonSendFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSendFilesActionPerformed(evt);
            }
        });

        jButtonDeleteFiles.setText("Eliminar archivos");
        jButtonDeleteFiles.setToolTipText("");
        jButtonDeleteFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteFilesActionPerformed(evt);
            }
        });

        jButtonCreateDirectory.setText("Crear nueva carpeta");

        jButtonDownloadFiles.setText("Descargar archivos de servidor");
        jButtonDownloadFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDownloadFilesActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(jListFilesInServer);

        jButtonOpenDirectory.setText("mostrar contenido de carpeta");
        jButtonOpenDirectory.setToolTipText("");
        jButtonOpenDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpenDirectoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jButtonSelectFiles)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSelectFilesServer)
                .addGap(45, 45, 45))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jButtonCreateDirectory)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonOpenDirectory)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jButtonDownloadFiles)
                                    .addGap(52, 52, 52))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jButtonDeleteFiles)
                                    .addGap(86, 86, 86)))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(204, 204, 204))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(jButtonSendFiles)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSelectFiles)
                    .addComponent(jButtonSelectFilesServer))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonSendFiles)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCreateDirectory)
                        .addGap(48, 48, 48))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonOpenDirectory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDeleteFiles)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonDownloadFiles)
                        .addGap(28, 28, 28))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSelectFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectFilesActionPerformed
        JFileChooser jf = new JFileChooser();
        jf.setMultiSelectionEnabled(true);
        jf.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        int r = jf.showOpenDialog(null);
           
        if(r == JFileChooser.APPROVE_OPTION){
            File[] f = jf.getSelectedFiles();
            this.archivos=f;
            this.jTextAreaFilesSelected.setText("");
            mostrarArchivos(f,"");
            //cliente.enviar_archivos(f);
            
        }
    }//GEN-LAST:event_jButtonSelectFilesActionPerformed

    private void jButtonSendFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSendFilesActionPerformed
        if(archivos.length == 0){
            this.jTextAreaFilesSelected.setText(null);
            this.jTextAreaFilesSelected.setText("No hay archivos seleccionados para enviar");
        }else{
            cliente.instruccion(0);
            cliente.enviar_archivos(archivos);
            archivos=new File[0];
            System.gc();
        }
    }//GEN-LAST:event_jButtonSendFilesActionPerformed

    private void jButtonDownloadFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDownloadFilesActionPerformed
        /*File f = new File("Mi\\");
        JFileChooser jfc = new JFileChooser(f);
        jfc.showOpenDialog(null);*/
        cliente.instruccion(1);
        cliente.recibir_archivo();
    }//GEN-LAST:event_jButtonDownloadFilesActionPerformed

    private void jButtonSelectFilesServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectFilesServerActionPerformed
        // TODO add your handling code here:
        cliente.instruccion(2);
        cliente.setPath("/");
        subRutas.clear();
        try {
            showFilesInServer();
        } catch (IOException ex) {
            Logger.getLogger(ViewCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonSelectFilesServerActionPerformed

    private void jButtonDeleteFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteFilesActionPerformed
        if(jListFilesInServer.getSelectedValuesList().isEmpty()){
            JOptionPane.showMessageDialog(null, "Error. Selecciona un archivo para eliminar");
        }else{
            String path = "";
            for(String p : subRutas) {
                path += p + "/";
            }
            List<String> filesSelectedToDelete = jListFilesInServer.getSelectedValuesList();
            for(int i=0; i<filesSelectedToDelete.size(); i++) {
                filesSelectedToDelete.set(i, path + filesSelectedToDelete.get(i));
            }
            cliente.instruccion(3);
            try {
                cliente.deleteFiles(filesSelectedToDelete);                    
            } catch (IOException ex) {
                System.out.println("Error delete");
            }
        }
    }//GEN-LAST:event_jButtonDeleteFilesActionPerformed

    private void jButtonOpenDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpenDirectoryActionPerformed
        if((jListFilesInServer.getSelectedValuesList().isEmpty())){
            JOptionPane.showMessageDialog(null, "Error. Selecciona una carpeta");
        }else{
            String currentDirectory = jListFilesInServer.getSelectedValue();
            String firstChar = currentDirectory.substring(0, 1);
            String isDirectory = "/";

            if(firstChar.equals(isDirectory)){
                System.out.println("opening subdirectory ");
                cliente.instruccion(2);
                cliente.setPath(jListFilesInServer.getSelectedValue());
                subRutas.add(jListFilesInServer.getSelectedValue());
                try {
                    showFilesInServer();
                } catch (IOException ex) {
                    Logger.getLogger(ViewCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(null, "Error. Selecciona una carpeta valida");
            }
        }
        
        
        
    }//GEN-LAST:event_jButtonOpenDirectoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewCliente().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCreateDirectory;
    private javax.swing.JButton jButtonDeleteFiles;
    private javax.swing.JButton jButtonDownloadFiles;
    private javax.swing.JButton jButtonOpenDirectory;
    private javax.swing.JButton jButtonSelectFiles;
    private javax.swing.JButton jButtonSelectFilesServer;
    private javax.swing.JButton jButtonSendFiles;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jListFilesInServer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextAreaFilesSelected;
    // End of variables declaration//GEN-END:variables
}
